services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-app
    ports:
      - '3003:3003'
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=3003
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=dockdock
    volumes:
      - nest-app-node-modules:/usr/src/app/node_modules
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network
    command: pnpm run start:dev
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.docker-devops-1omqvu-3aae49-168-231-87-2.traefik.me`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.services.prometheus.loadbalancer.server.port=3003"

  postgres:
    image: postgres:16-alpine
    container_name: postgres-db
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dockdock
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - '8081:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  nest-app-node-modules: